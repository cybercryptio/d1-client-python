# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import index_pb2 as index__pb2


class IndexStub(object):
    """/ Service for using secure index.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Add = channel.unary_unary(
                '/d1.index.Index/Add',
                request_serializer=index__pb2.AddRequest.SerializeToString,
                response_deserializer=index__pb2.AddResponse.FromString,
                )
        self.Search = channel.unary_unary(
                '/d1.index.Index/Search',
                request_serializer=index__pb2.SearchRequest.SerializeToString,
                response_deserializer=index__pb2.SearchResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/d1.index.Index/Delete',
                request_serializer=index__pb2.DeleteRequest.SerializeToString,
                response_deserializer=index__pb2.DeleteResponse.FromString,
                )


class IndexServicer(object):
    """/ Service for using secure index.
    """

    def Add(self, request, context):
        """Adds keywords/identifier pairs to secure index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Searches in secure index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Deletes keywords/identifier pairs from secure index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IndexServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Add': grpc.unary_unary_rpc_method_handler(
                    servicer.Add,
                    request_deserializer=index__pb2.AddRequest.FromString,
                    response_serializer=index__pb2.AddResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=index__pb2.SearchRequest.FromString,
                    response_serializer=index__pb2.SearchResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=index__pb2.DeleteRequest.FromString,
                    response_serializer=index__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'd1.index.Index', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Index(object):
    """/ Service for using secure index.
    """

    @staticmethod
    def Add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/d1.index.Index/Add',
            index__pb2.AddRequest.SerializeToString,
            index__pb2.AddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/d1.index.Index/Search',
            index__pb2.SearchRequest.SerializeToString,
            index__pb2.SearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/d1.index.Index/Delete',
            index__pb2.DeleteRequest.SerializeToString,
            index__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
